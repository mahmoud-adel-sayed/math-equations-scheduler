plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.jakewharton.butterknife'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    def VERSION_CODE = 1
    def VERSION_NAME = "1.0.0"
    def FORMATTED_DATE = new Date().format('yyyyMMddHHmm')

    defaultConfig {
        applicationId "com.example.android.scheduler"
        minSdkVersion 19
        targetSdkVersion 30
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.example.android.scheduler.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def flavor = variant.name
                    outputFileName = "Math_Equations_Scheduler_${flavor}_${VERSION_NAME}_${FORMATTED_DATE}.apk"
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions 'version'
    productFlavors {
        QA {
            dimension = 'version'
            versionCode = VERSION_CODE
            versionName = VERSION_NAME
            applicationIdSuffix = '.QA'
            versionNameSuffix = '-QA'
        }

        Prod {
            dimension = 'version'
            versionCode = VERSION_CODE
            versionName = VERSION_NAME
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Location Services
    implementation "com.google.android.gms:play-services-location:$locationServicesVersion"

    // Work Manager
    implementation "androidx.work:work-runtime:$workVersion"
    androidTestImplementation "androidx.work:work-testing:$workVersion"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // LifeCycles
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"

    // Local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.test:core-ktx:$testCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$testExtKotlinRunnerVersion"
    testImplementation "androidx.test:rules:$testRulesVersion"
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"

    // Android unit tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "com.github.tmurakami:dexopener:$dexopenerVersion"
    androidTestImplementation "androidx.test:core-ktx:$testCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$testExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.ext:truth:$testExtTruthVersion"
    androidTestImplementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiAutomatorVersion"

    // Conflict resolution between main and test APK
    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
    androidTestImplementation "com.google.android.material:material:$materialVersion"
    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'
}